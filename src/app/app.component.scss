.container-production-report {
  width: 100%;
  height: 90%;

  .production-report-header {
    display: flex;
    justify-content: space-between;
  
    .legends {
      display: flex;
      flex-wrap: wrap;
    
      .legend {
        margin-left: 20px;
        display: flex;
        align-items: center;
    
        .indicator {
          height: 10px;
          width: 20px;
          background-color: aquamarine;
          margin-right: 10px;
          align-self: center;
        }
      }
    }
  }
}

.container-other-kpi {
  width: 50%;
  height: 90%;

  .other-kpi-header {
    display: flex;
    justify-content: space-between;

    .legends {
      display: flex;
      flex-wrap: wrap;
    
      .legend {
        margin-left: 20px;
        display: flex;
        align-items: center;
    
        .indicator {
          height: 3px;
          width: 31px;
          background-color: aquamarine;
          margin-right: 10px;
          align-self: center;

          &::after {
            content: '';
            display: inline-block;
            height: 9px;
            width: 9px;
            border-radius: 50%;
            background-color: inherit;

            position: relative;
            left: calc(30px / 2 - 4px);
            bottom: 11.5px;
          }
        }
      }
    }
  }
}

@property --percent {
  syntax: "<number>";
  initial-value: 0;
  inherits: false;
}
@property --temp {
  syntax: "<number>";
  initial-value: 0;
  inherits: false;
}
@property --v1 {
  syntax: "<integer>";
  initial-value: 0;
  inherits: false;
}
@property --v2 {
  syntax: "<integer>";
  initial-value: 0;
  inherits: false;
}

.container-gauge {
  width: 340px;
  height: auto;
  position: relative;
  display: flex;
  justify-content: flex-start !important;

  svg {
    max-width: 100%;
  }
   
  path {
     stroke-width: 55;
     fill: none;
    
  }
  
  .realtime-progress {
    stroke-dasharray: var(--lastNumerator) 1413.75;
    animation: progress 0.8s ease-out forwards;
  }

  .realtime-progress-40-par {
    stroke-dasharray: var(--lastNumerator) 1413.75;
    animation: progress 1.2s ease-out forwards;
  }

  .realtime-progress-60-par {
    stroke-dasharray: var(--lastNumerator) 1413.75;
    animation: progress 1.6s ease-out forwards;
  }

  .realtime-progress-80-par {
    stroke-dasharray: var(--lastNumerator) 1413.75;
    animation: progress 2s ease-out forwards;
  }

  .realtime-progress-100-par {
    stroke-dasharray: var(--lastNumerator) 1413.75;
    animation: progress 2.4s ease-out forwards;
  }

  .gauge-percentage {
    // https://stackoverflow.com/questions/8508275/how-to-center-a-position-absolute-element
    position: absolute;
    margin: 0 auto;
    left: 0;
    right: 0;
    text-align: center;
    top: 40%;
    font-size: 4rem;

    .dot {
      vertical-align: bottom;
      line-height: initial;
    }

    .par {
      vertical-align: middle;
      line-height: initial;
    }
  }

  .gauge-percentage-animation {
    animation: updateNumber 1s ease-out;
  }
  
  @keyframes progress {
    from {
      stroke-dasharray: var(--lastNumerator) 1413.75; 
    }
    to {
      stroke-dasharray: var(--curNumerator) 1413.75; 
    }
  }

  @keyframes updateNumber {
    0% {
      opacity: 0;
      transform: scale(0.8)
    }
    50% {
      opacity: 0.5;
      transform: scale(1.2);
    }
    100% {
      opacity: 1;
      transform: scale(1);
    }
  }
}

._odometer {
  transition: --percent 0.8s;
  --temp: calc(var(--percent) * 100);
  --v1: max(var(--temp) - 0.5, 0);
  --v2: max((var(--temp) - var(--v1)) * 100 - 0.5, 0);
  counter-reset: v1 var(--v1) v2 var(--v2);

  &::before {
    // content: counter(v1) "." counter(v2, decimal-leading-zero) "%";
    content: counter(v1)"%";
  }
}
._odometer-40-par {
  transition: --percent 1.2s;
  --temp: calc(var(--percent) * 100);
  --v1: max(var(--temp) - 0.5, 0);
  --v2: max((var(--temp) - var(--v1)) * 100 - 0.5, 0);
  counter-reset: v1 var(--v1) v2 var(--v2);

  &::before {
    content: counter(v1)"%";
  }
}
._odometer-60-par {
  transition: --percent 1.6s;
  --temp: calc(var(--percent) * 100);
  --v1: max(var(--temp) - 0.5, 0);
  --v2: max((var(--temp) - var(--v1)) * 100 - 0.5, 0);
  counter-reset: v1 var(--v1) v2 var(--v2);

  &::before {
    content: counter(v1)"%";
  }
}
._odometer-80-par {
  transition: --percent 2s;
  --temp: calc(var(--percent) * 100);
  --v1: max(var(--temp) - 0.5, 0);
  --v2: max((var(--temp) - var(--v1)) * 100 - 0.5, 0);
  counter-reset: v1 var(--v1) v2 var(--v2);

  &::before {
    content: counter(v1)"%";
  }
}
._odometer-100-par {
  transition: --percent 2.4s;
  --temp: calc(var(--percent) * 100);
  --v1: max(var(--temp) - 0.5, 0);
  --v2: max((var(--temp) - var(--v1)) * 100 - 0.5, 0);
  counter-reset: v1 var(--v1) v2 var(--v2);

  &::before {
    content: counter(v1)"%";
  }
}

.bg {
  background-color: grey;
}
.lds-spinner {
  color: official;
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}
.lds-spinner div {
  transform-origin: 40px 40px;
  animation: lds-spinner 1.2s linear infinite;
}
.lds-spinner div:after {
  content: " ";
  display: block;
  position: absolute;
  top: 3px;
  left: 37px;
  width: 6px;
  height: 18px;
  border-radius: 20%;
  background: #fff;
}
.lds-spinner div:nth-child(1) {
  transform: rotate(0deg);
  animation-delay: -1.1s;
}
.lds-spinner div:nth-child(2) {
  transform: rotate(30deg);
  animation-delay: -1s;
}
.lds-spinner div:nth-child(3) {
  transform: rotate(60deg);
  animation-delay: -0.9s;
}
.lds-spinner div:nth-child(4) {
  transform: rotate(90deg);
  animation-delay: -0.8s;
}
.lds-spinner div:nth-child(5) {
  transform: rotate(120deg);
  animation-delay: -0.7s;
}
.lds-spinner div:nth-child(6) {
  transform: rotate(150deg);
  animation-delay: -0.6s;
}
.lds-spinner div:nth-child(7) {
  transform: rotate(180deg);
  animation-delay: -0.5s;
}
.lds-spinner div:nth-child(8) {
  transform: rotate(210deg);
  animation-delay: -0.4s;
}
.lds-spinner div:nth-child(9) {
  transform: rotate(240deg);
  animation-delay: -0.3s;
}
.lds-spinner div:nth-child(10) {
  transform: rotate(270deg);
  animation-delay: -0.2s;
}
.lds-spinner div:nth-child(11) {
  transform: rotate(300deg);
  animation-delay: -0.1s;
}
.lds-spinner div:nth-child(12) {
  transform: rotate(330deg);
  animation-delay: 0s;
}
@keyframes lds-spinner {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
